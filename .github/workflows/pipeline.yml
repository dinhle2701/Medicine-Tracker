name: Medicine Dose Tracker CI/CD pipeline

on:
  push:
    branches: 
      - main

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup SDK 17
        uses: actions/setup-java@v3
        with: 
          distribution: "temurin"
          java-version: 21

      - name: Maven test package
        working-directory: backend
        run: mvn clean test

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Hoặc phiên bản phù hợp với React

      - name: Install dependencies
        working-directory: frontend
        run: npm install --legacy-peer-deps

      - name: 🔍 Run tests
        working-directory: frontend
        run: npm run test --run

  deploy-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    needs: test-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build frontend
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: |
          aws s3 sync ./build s3://${{ secrets.S3_BUCKET_NAME }} --delete

      - name: Create CloudFront invalidation
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  deploy-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    needs: test-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Build backend
        working-directory: backend
        run: mvn clean package

      - name: Upload backend JAR to EC2 via SCP
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          scp -i key.pem -o StrictHostKeyChecking=no backend/target/medicine-tracker-0.0.1-SNAPSHOT.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/

      - name: SSH into EC2 and run backend
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            pkill -f 'medicine-tracker' || true
            nohup java -jar /home/ubuntu/medicine-tracker-0.0.1-SNAPSHOT.jar > log.txt 2>&1 &
          EOF
